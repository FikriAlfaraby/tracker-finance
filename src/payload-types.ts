/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    'financial-data': FinancialDatum;
    transactions: Transaction;
    'financial-scores': FinancialScore;
    pockets: Pocket;
    'pocket-transactions': PocketTransaction;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    'financial-data': FinancialDataSelect<false> | FinancialDataSelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    'financial-scores': FinancialScoresSelect<false> | FinancialScoresSelect<true>;
    pockets: PocketsSelect<false> | PocketsSelect<true>;
    'pocket-transactions': PocketTransactionsSelect<false> | PocketTransactionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role?: ('admin' | 'user') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "financial-data".
 */
export interface FinancialDatum {
  id: string;
  user?: (string | null) | User;
  /**
   * Pemasukan bulanan
   */
  monthlyIncome: number;
  /**
   * Pengeluaran bulanan
   */
  monthlyExpenses: number;
  /**
   * Total aset yang dimiliki
   */
  totalAssets: number;
  /**
   * Total utang yang dimiliki
   */
  totalLiabilities: number;
  /**
   * Kekayaan bersih (total aset - total utang)
   */
  netWorth?: number | null;
  /**
   * Skor keuangan yang dihitung otomatis
   */
  score?: number | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: string;
  user?: (string | null) | User;
  type: 'income' | 'expense';
  /**
   * Kantong sumber dana untuk transaksi ini
   */
  sourcePocket: string | Pocket;
  category:
    | 'salary'
    | 'freelance'
    | 'investment'
    | 'bonus'
    | 'other-income'
    | 'food'
    | 'transportation'
    | 'shopping'
    | 'bills'
    | 'entertainment'
    | 'health'
    | 'education'
    | 'other-expense';
  amount: number;
  date: string;
  /**
   * Deskripsi transaksi
   */
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pockets".
 */
export interface Pocket {
  id: string;
  user?: (string | null) | User;
  /**
   * Nama kantong (contoh: Kantong Utama, Tabungan, Dana Darurat)
   */
  name: string;
  /**
   * Deskripsi tujuan kantong ini
   */
  description?: string | null;
  /**
   * Saldo saat ini dalam kantong
   */
  balance?: number | null;
  pocketType:
    | 'main'
    | 'savings'
    | 'emergency'
    | 'investment'
    | 'shopping'
    | 'vacation'
    | 'education'
    | 'health'
    | 'other';
  /**
   * Target jumlah untuk kantong ini (opsional)
   */
  targetAmount?: number | null;
  /**
   * Apakah kantong ini aktif
   */
  isActive?: boolean | null;
  icon?:
    | (
        | 'money'
        | 'bank'
        | 'emergency'
        | 'investment'
        | 'shopping'
        | 'vacation'
        | 'education'
        | 'health'
        | 'digital'
        | 'target'
      )
    | null;
  color?: ('green' | 'blue' | 'purple' | 'pink' | 'yellow' | 'red' | 'gray') | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "financial-scores".
 */
export interface FinancialScore {
  id: string;
  user: string | User;
  score: number;
  evaluatedAt: string;
  /**
   * Rasio utang terhadap pendapatan (%)
   */
  debtToIncomeRatio?: number | null;
  /**
   * Rasio tabungan terhadap pendapatan (%)
   */
  savingsToIncomeRatio?: number | null;
  /**
   * Rasio pengeluaran terhadap pendapatan (%)
   */
  expensesToIncomeRatio?: number | null;
  /**
   * Rasio kekayaan bersih terhadap pendapatan tahunan
   */
  netWorthRatio?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pocket-transactions".
 */
export interface PocketTransaction {
  id: string;
  user?: (string | null) | User;
  transactionType: 'transfer';
  /**
   * Kantong sumber (untuk transfer dan withdraw)
   */
  fromPocket?: (string | null) | Pocket;
  /**
   * Kantong tujuan (untuk transfer dan top up)
   */
  toPocket?: (string | null) | Pocket;
  amount: number;
  /**
   * Deskripsi transaksi
   */
  description?: string | null;
  date: string;
  /**
   * Transaksi utama yang terkait (jika ada)
   */
  relatedTransaction?: (string | null) | Transaction;
  /**
   * Catatan tambahan
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'financial-data';
        value: string | FinancialDatum;
      } | null)
    | ({
        relationTo: 'transactions';
        value: string | Transaction;
      } | null)
    | ({
        relationTo: 'financial-scores';
        value: string | FinancialScore;
      } | null)
    | ({
        relationTo: 'pockets';
        value: string | Pocket;
      } | null)
    | ({
        relationTo: 'pocket-transactions';
        value: string | PocketTransaction;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "financial-data_select".
 */
export interface FinancialDataSelect<T extends boolean = true> {
  user?: T;
  monthlyIncome?: T;
  monthlyExpenses?: T;
  totalAssets?: T;
  totalLiabilities?: T;
  netWorth?: T;
  score?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  user?: T;
  type?: T;
  sourcePocket?: T;
  category?: T;
  amount?: T;
  date?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "financial-scores_select".
 */
export interface FinancialScoresSelect<T extends boolean = true> {
  user?: T;
  score?: T;
  evaluatedAt?: T;
  debtToIncomeRatio?: T;
  savingsToIncomeRatio?: T;
  expensesToIncomeRatio?: T;
  netWorthRatio?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pockets_select".
 */
export interface PocketsSelect<T extends boolean = true> {
  user?: T;
  name?: T;
  description?: T;
  balance?: T;
  pocketType?: T;
  targetAmount?: T;
  isActive?: T;
  icon?: T;
  color?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pocket-transactions_select".
 */
export interface PocketTransactionsSelect<T extends boolean = true> {
  user?: T;
  transactionType?: T;
  fromPocket?: T;
  toPocket?: T;
  amount?: T;
  description?: T;
  date?: T;
  relatedTransaction?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}